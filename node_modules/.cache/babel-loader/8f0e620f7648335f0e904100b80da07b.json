{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DS\\\\DSDEVELOPS\\\\react-quiz-app\\\\src\\\\components\\\\duringQuiz.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nconst QNumber = styled.div`\n    margin-top: 30px;\n    margin-bottom: 20px;\n    font-size: 1.01em;\n`;\nconst Score = styled.div`\n    margin-top: 50x;\n    margin-bottom: 90px;\n`;\nconst Q = styled.div`\n    text-align: center;\n    margin: 0 auto;\n    width: 80%;\n    overflow-wrap: break-word;\n    font-size: 1.8em;\n    margin-top: 20px;\n    margin-bottom: 20px;\n`;\nconst AnswerBtn = styled.button`\n    color: black;\n    display: block;\n    width: 230px;\n    margin: 0 auto;\n    margin-top: 15px;\n    font-size: 1.02em;\n    background-color: ${props => props.styleProp === 'correct' ? '#00FF00' : props.styleProp === 'incorrect' ? '#FF0000' : '#00D8FF'};\n    border: 1.2px solid black;\n    padding: 15px;\n    transition: all 0.4s;\n    font-family: 'Roboto';\n    :hover {\n        background-color: ${props => props.styleProp === 'correct' ? '#00FF00' : props.styleProp === 'incorrect' ? '##FF0000' : '#5EE6FF'};\n        cursor: ${props => props.disabled ? 'default' : 'pointer'};\n    }\n`;\nconst NextBtn = styled.button`\n    display: block;\n    margin: 0 auto;\n    margin-top: 40px;\n    margin-bottom: 30px;\n    font-size: 1.03em;\n    background-color: ${props => props.disabled ? '#D3D3D3' : '#00D8FF'};\n    border: 1px solid black;\n    padding: 13px;\n    transition: all 0.4s;\n    font-family: 'Roboto';\n    :hover {\n        background-color: ${props => props.disabled ? '#D3D3D3' : '#5EE6FF'};\n        cursor: ${props => props.disabled ? 'default' : 'pointer'};\n    }\n`;\nconst AfterAnswer = styled.div`\n    font-size: 1.2em;\n    font-weight: 500;\n    margin-bottom: 25px;\n`;\nconst Timer = styled.div`\n    margin-top: 100px;\n    margin-bottom: 5px;\n    font-size: 1.2em;\n`;\n\nclass DuringQuiz extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onAnswerClicked = answer => {\n      //const { correctAnswer, score, }\n      if (answer === correctAnswer) {\n        this.setState({\n          answerState: 'correct',\n          score: score + 1\n        });\n      } else {\n        this.setState({\n          answerState: 'incorrect'\n        });\n      }\n\n      this.setState({\n        i: i + 1,\n        nextDisabled: false,\n        answerDisabled: true,\n        showAfterAnswer: true\n      });\n    };\n\n    const {\n      questions,\n      timeInSeconds\n    } = this.props;\n    const _i = 0;\n    this.state = {\n      i: _i,\n      questionNumber: _i + 1,\n      question: questions[_i].question,\n      answers: questions[_i].answers,\n      correctAnswer: questions[_i].correct,\n      answerState: '',\n      answerDisabled: false,\n      showAfterAnswer: false,\n      next: questions.length > 1 ? 'Next Question' : 'Finish Quiz',\n      nextDisabled: true,\n      score: 0,\n      timeInSeconds: timeInSeconds\n    };\n  }\n\n  componentDidMount() {\n    let {\n      timeInSeconds\n    } = this.state;\n    this.runTimer = setInterval(() => {\n      this.setState({\n        timeInSeconds: timeInSeconds--\n      });\n    }, 1000);\n  }\n\n  componentDidUpdate() {\n    const {\n      timeInSeconds,\n      score\n    } = this.state;\n    const {\n      endQuiz,\n      updateTimeRanOut,\n      getScore\n    } = this.props;\n\n    if (timeInSeconds === 0) {\n      this.setState({\n        timeInSeconds: 0\n      }, () => {\n        getScore(score);\n        endQuiz();\n        updateTimeRanOut();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.runTimer);\n  }\n\n  render() {\n    const {\n      questions,\n      endQuiz,\n      getScore\n    } = this.props;\n    let {\n      i\n    } = this.state;\n    const {\n      questionNumber,\n      question,\n      answers,\n      correctAnswer,\n      answerState,\n      answerDisabled,\n      showAfterAnswer,\n      next,\n      nextDisabled,\n      score,\n      timeInSeconds\n    } = this.state;\n\n    const onNextClicked = () => {\n      if (i === questions.length - 1) {\n        this.setState({\n          next: 'Finish Quiz'\n        });\n      } else if (i === questions.length) {\n        getScore(score);\n        return endQuiz();\n      }\n\n      this.setState({\n        questionNumber: i + 1,\n        question: questions[i].question,\n        answers: questions[i].answers,\n        correctAnswer: questions[i].correct,\n        nextDisabled: true,\n        answerDisabled: false,\n        answerState: '',\n        showAfterAnswer: false\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Timer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, Math.floor(timeInSeconds / 60) + ':' + ('0' + Math.floor(timeInSeconds % 60)).slice(-2)), /*#__PURE__*/React.createElement(QNumber, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, \"Question \", questionNumber, \"/\", questions.length), /*#__PURE__*/React.createElement(Q, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, question), showAfterAnswer && /*#__PURE__*/React.createElement(AfterAnswer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 37\n      }\n    }, \"Answer: \", correctAnswer, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, answers.map(answer => /*#__PURE__*/React.createElement(AnswerBtn, {\n      disabled: answerDisabled,\n      styleProp: answerState,\n      key: answer,\n      onClick: () => this.onAnswerClicked(answer),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }, answer))), /*#__PURE__*/React.createElement(NextBtn, {\n      disabled: nextDisabled,\n      onClick: onNextClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, next), /*#__PURE__*/React.createElement(Score, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, \"Score: \", score, \"/\", i));\n  }\n\n}\n\nexport default DuringQuiz;","map":{"version":3,"sources":["C:/Users/DS/DSDEVELOPS/react-quiz-app/src/components/duringQuiz.js"],"names":["React","styled","QNumber","div","Score","Q","AnswerBtn","button","props","styleProp","disabled","NextBtn","AfterAnswer","Timer","DuringQuiz","Component","constructor","onAnswerClicked","answer","correctAnswer","setState","answerState","score","i","nextDisabled","answerDisabled","showAfterAnswer","questions","timeInSeconds","state","questionNumber","question","answers","correct","next","length","componentDidMount","runTimer","setInterval","componentDidUpdate","endQuiz","updateTimeRanOut","getScore","componentWillUnmount","clearInterval","render","onNextClicked","Math","floor","slice","map"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n \r\nconst QNumber = styled.div`\r\n    margin-top: 30px;\r\n    margin-bottom: 20px;\r\n    font-size: 1.01em;\r\n`\r\nconst Score = styled.div`\r\n    margin-top: 50x;\r\n    margin-bottom: 90px;\r\n`\r\nconst Q = styled.div`\r\n    text-align: center;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n    overflow-wrap: break-word;\r\n    font-size: 1.8em;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n`\r\nconst AnswerBtn = styled.button`\r\n    color: black;\r\n    display: block;\r\n    width: 230px;\r\n    margin: 0 auto;\r\n    margin-top: 15px;\r\n    font-size: 1.02em;\r\n    background-color: ${props => props.styleProp === 'correct' ? '#00FF00' : props.styleProp === 'incorrect' ? '#FF0000' : '#00D8FF'};\r\n    border: 1.2px solid black;\r\n    padding: 15px;\r\n    transition: all 0.4s;\r\n    font-family: 'Roboto';\r\n    :hover {\r\n        background-color: ${props => props.styleProp === 'correct' ? '#00FF00' : props.styleProp === 'incorrect' ? '##FF0000' : '#5EE6FF'};\r\n        cursor: ${props => props.disabled ? 'default' : 'pointer'};\r\n    }\r\n`\r\nconst NextBtn = styled.button`\r\n    display: block;\r\n    margin: 0 auto;\r\n    margin-top: 40px;\r\n    margin-bottom: 30px;\r\n    font-size: 1.03em;\r\n    background-color: ${props => props.disabled ? '#D3D3D3' : '#00D8FF'};\r\n    border: 1px solid black;\r\n    padding: 13px;\r\n    transition: all 0.4s;\r\n    font-family: 'Roboto';\r\n    :hover {\r\n        background-color: ${props => props.disabled ? '#D3D3D3' : '#5EE6FF'};\r\n        cursor: ${props => props.disabled ? 'default' : 'pointer'};\r\n    }\r\n`\r\nconst AfterAnswer = styled.div`\r\n    font-size: 1.2em;\r\n    font-weight: 500;\r\n    margin-bottom: 25px;\r\n`\r\nconst Timer = styled.div`\r\n    margin-top: 100px;\r\n    margin-bottom: 5px;\r\n    font-size: 1.2em;\r\n`\r\n \r\nclass DuringQuiz extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        const { questions, timeInSeconds } = this.props\r\n        const i = 0\r\n        this.state = {\r\n            i: i,\r\n            questionNumber: i + 1,\r\n            question: questions[i].question,\r\n            answers: questions[i].answers,\r\n            correctAnswer: questions[i].correct,\r\n            answerState: '',\r\n            answerDisabled: false,\r\n            showAfterAnswer: false,\r\n            next: questions.length > 1 ? 'Next Question' : 'Finish Quiz',\r\n            nextDisabled: true,\r\n            score: 0,\r\n            timeInSeconds: timeInSeconds\r\n        }\r\n    }\r\n \r\n    componentDidMount() {\r\n        let { timeInSeconds } = this.state\r\n        this.runTimer = setInterval( () => {\r\n            this.setState({\r\n                timeInSeconds: timeInSeconds--\r\n            })}, 1000)\r\n        }\r\n \r\n    componentDidUpdate() {\r\n        const { timeInSeconds, score } = this.state\r\n        const { endQuiz, updateTimeRanOut, getScore } = this.props\r\n        if (timeInSeconds === 0) {\r\n            this.setState({\r\n                timeInSeconds: 0\r\n            }, () => {\r\n            getScore(score)\r\n            endQuiz()\r\n            updateTimeRanOut()\r\n            })\r\n        }\r\n    }\r\n \r\n    componentWillUnmount() {\r\n        clearInterval(this.runTimer)\r\n    }\r\n\r\n    onAnswerClicked = (answer) => {\r\n        //const { correctAnswer, score, }\r\n        if (answer === correctAnswer) {\r\n            this.setState({\r\n                answerState: 'correct',\r\n                score: score + 1\r\n            })\r\n        } else {\r\n            this.setState({\r\n                answerState: 'incorrect'\r\n            })\r\n        }\r\n        this.setState({\r\n            i: i + 1,\r\n            nextDisabled: false,\r\n            answerDisabled: true,\r\n            showAfterAnswer: true\r\n        })\r\n    }\r\n \r\n    render() {\r\n        const { questions, endQuiz, getScore } = this.props\r\n        let { i } = this.state\r\n        const { questionNumber, question, answers, correctAnswer, answerState, answerDisabled, showAfterAnswer, next, nextDisabled, score, timeInSeconds } = this.state\r\n \r\n        const onNextClicked = () => {\r\n            if (i === questions.length - 1) {\r\n                this.setState({\r\n                    next: 'Finish Quiz'\r\n                })\r\n            } else if (i === questions.length) {\r\n                getScore(score)\r\n                return (endQuiz())\r\n            }\r\n            this.setState({\r\n                questionNumber: i + 1,\r\n                question: questions[i].question,\r\n                answers: questions[i].answers,\r\n                correctAnswer: questions[i].correct,\r\n                nextDisabled: true,\r\n                answerDisabled: false,\r\n                answerState: '',\r\n                showAfterAnswer: false\r\n            })\r\n        }\r\n \r\n        return (\r\n            <div>\r\n                <Timer>{Math.floor(timeInSeconds / 60) + ':' + ('0' + Math.floor(timeInSeconds % 60)).slice(-2)}</Timer>\r\n                <QNumber>Question {questionNumber}/{questions.length}</QNumber>\r\n                <Q>{question}</Q>\r\n                {showAfterAnswer && <AfterAnswer>Answer: {correctAnswer} </AfterAnswer>}\r\n                <div>\r\n                    {answers.map((answer) => (\r\n                        <AnswerBtn disabled={answerDisabled} styleProp={answerState} key={answer} onClick={() => this.onAnswerClicked(answer)}>{answer}</AnswerBtn>\r\n                    ))}\r\n                </div>\r\n                <NextBtn disabled={nextDisabled} onClick={onNextClicked}>{next}</NextBtn>\r\n                <Score>Score: {score}/{i}</Score>\r\n            </div>\r\n          )\r\n        }\r\n    }\r\n \r\nexport default DuringQuiz"]},"metadata":{},"sourceType":"module"}