{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DS\\\\DSDEVELOPS\\\\react-quiz-app\\\\src\\\\sections\\\\quiz.js\";\nimport React from 'react';\nimport BeforeQuiz from '../components/beforeQuiz';\nimport DuringQuiz from '../components/duringQuiz';\nimport AfterQuiz from '../components/afterQuiz';\nimport { questionsFromBank } from '../questionsBank';\n\nclass Quiz extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      beforeQuizHidden: false,\n      duringQuizHidden: true,\n      afterQuizHidden: true,\n      questions: {},\n      score: 0,\n      timeInSeconds: 0,\n      timeRanOut: false\n    };\n    this.difficultyOptions = [{\n      difficulty: 'Easy',\n      numberOfQuestions: 12,\n      timeInMin: 2\n    }, {\n      difficulty: 'Medium',\n      numberOfQuestions: 15,\n      timeInMin: 1.5\n    }, {\n      difficulty: 'Hard',\n      numberOfQuestions: 20,\n      timeInMin: 0.1\n    }];\n\n    this.startQuiz = () => {\n      this.setState({\n        beforeQuizHidden: true,\n        duringQuizHidden: false\n      });\n    };\n\n    this.endQuiz = () => {\n      this.setState({\n        duringQuizHidden: true,\n        afterQuizHidden: false\n      });\n    };\n\n    this.restartQuiz = () => {\n      this.setState({\n        beforeQuizHidden: false,\n        afterQuizHidden: true,\n        timeRanOut: false\n      });\n    };\n\n    this.generateQuestions = numberOfQuestions => {\n      this.setState({\n        questions: questionsFromBank(numberOfQuestions)\n      });\n    };\n\n    this.getScore = finalScore => {\n      this.setState({\n        score: finalScore\n      });\n    };\n\n    this.setTimer = updatedTime => {\n      this.setState({\n        timeInSeconds: updatedTime\n      });\n    };\n\n    this.updateTimeRanOut = () => {\n      this.setState({\n        timeRanOut: true\n      });\n    };\n  }\n\n  render() {\n    const {\n      beforeQuizHidden,\n      duringQuizHidden,\n      afterQuizHidden,\n      questions,\n      score,\n      timeInSeconds,\n      timeRanOut\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, !beforeQuizHidden && /*#__PURE__*/React.createElement(BeforeQuiz, {\n      startQuiz: this.startQuiz,\n      difficultyOptions: this.difficultyOptions,\n      generateQuestions: this.generateQuestions,\n      timeInSeconds: timeInSeconds,\n      setTimer: this.setTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 39\n      }\n    }), !duringQuizHidden && /*#__PURE__*/React.createElement(DuringQuiz, {\n      questions: questions,\n      endQuiz: this.endQuiz,\n      getScore: this.getScore,\n      timeInSeconds: timeInSeconds,\n      timeRanOut: timeRanOut,\n      updateTimeRanOut: this.updateTimeRanOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 39\n      }\n    }), !afterQuizHidden && /*#__PURE__*/React.createElement(AfterQuiz, {\n      questions: questions,\n      restartQuiz: this.restartQuiz,\n      score: score,\n      timeInSeconds: timeInSeconds,\n      timeRanOut: timeRanOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 38\n      }\n    }));\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["C:/Users/DS/DSDEVELOPS/react-quiz-app/src/sections/quiz.js"],"names":["React","BeforeQuiz","DuringQuiz","AfterQuiz","questionsFromBank","Quiz","Component","state","beforeQuizHidden","duringQuizHidden","afterQuizHidden","questions","score","timeInSeconds","timeRanOut","difficultyOptions","difficulty","numberOfQuestions","timeInMin","startQuiz","setState","endQuiz","restartQuiz","generateQuestions","getScore","finalScore","setTimer","updatedTime","updateTimeRanOut","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport BeforeQuiz from '../components/beforeQuiz'\r\nimport DuringQuiz from '../components/duringQuiz'\r\nimport AfterQuiz from '../components/afterQuiz'\r\nimport { questionsFromBank } from '../questionsBank'\r\n \r\nclass Quiz extends React.Component  {\r\n    state = {\r\n        beforeQuizHidden: false,\r\n        duringQuizHidden: true,\r\n        afterQuizHidden: true,\r\n        questions: {},\r\n        score: 0,\r\n        timeInSeconds: 0,\r\n        timeRanOut: false\r\n    }\r\n\r\n    difficultyOptions = [\r\n        {\r\n            difficulty: 'Easy',\r\n            numberOfQuestions: 12,\r\n            timeInMin: 2\r\n        },\r\n        {\r\n            difficulty: 'Medium',\r\n            numberOfQuestions: 15,\r\n            timeInMin: 1.5\r\n        },\r\n        {\r\n            difficulty: 'Hard',\r\n            numberOfQuestions: 20,\r\n            timeInMin: 0.1\r\n        }\r\n    ]\r\n\r\n    startQuiz = () => {\r\n        this.setState({\r\n            beforeQuizHidden: true,\r\n            duringQuizHidden: false\r\n        })\r\n    }\r\n\r\n    endQuiz = () => {\r\n        this.setState({\r\n            duringQuizHidden: true,\r\n            afterQuizHidden: false,\r\n        })\r\n    }\r\n\r\n    restartQuiz = () => {\r\n        this.setState({\r\n            beforeQuizHidden: false,\r\n            afterQuizHidden: true,\r\n            timeRanOut: false\r\n        })\r\n    }\r\n\r\n    generateQuestions = (numberOfQuestions) => {\r\n        this.setState({\r\n            questions: questionsFromBank(numberOfQuestions)\r\n        })\r\n    }\r\n\r\n    getScore = (finalScore) => {\r\n        this.setState({\r\n            score: finalScore\r\n        })\r\n    }\r\n\r\n    setTimer = (updatedTime) => {\r\n        this.setState({\r\n            timeInSeconds: updatedTime\r\n        })\r\n    }\r\n\r\n    updateTimeRanOut = () => {\r\n        this.setState({\r\n            timeRanOut: true\r\n        })\r\n    }\r\n \r\n    render() {\r\n        const { beforeQuizHidden, duringQuizHidden, afterQuizHidden, questions, score, timeInSeconds, timeRanOut } = this.state\r\n \r\n        return (\r\n            <div>\r\n                {!beforeQuizHidden && <BeforeQuiz\r\n                startQuiz = {this.startQuiz}\r\n                difficultyOptions = {this.difficultyOptions}\r\n                generateQuestions = {this.generateQuestions}\r\n                timeInSeconds = {timeInSeconds}\r\n                setTimer = {this.setTimer}\r\n                />}\r\n \r\n                {!duringQuizHidden && <DuringQuiz\r\n                questions = {questions}\r\n                endQuiz = {this.endQuiz}\r\n                getScore = {this.getScore}\r\n                timeInSeconds = {timeInSeconds}\r\n                timeRanOut = {timeRanOut}\r\n                updateTimeRanOut = {this.updateTimeRanOut}\r\n                />}\r\n \r\n                {!afterQuizHidden && <AfterQuiz\r\n                questions = {questions}\r\n                restartQuiz = {this.restartQuiz}\r\n                score = {score}\r\n                timeInSeconds = {timeInSeconds}\r\n                timeRanOut = {timeRanOut}\r\n                />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n \r\nexport default Quiz"]},"metadata":{},"sourceType":"module"}