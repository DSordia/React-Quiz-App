{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\DS\\\\DSDEVELOPS\\\\react-quiz-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\DS\\\\DSDEVELOPS\\\\react-quiz-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\DS\\\\DSDEVELOPS\\\\react-quiz-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\DS\\\\DSDEVELOPS\\\\react-quiz-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _taggedTemplateLiteral from\"C:\\\\Users\\\\DS\\\\DSDEVELOPS\\\\react-quiz-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n    margin-top: 60px;\\n    margin-bottom: 5px;\\n    font-size: 1.2em;\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n    margin-top: 60px;\\n    margin-bottom: 5px;\\n    font-size: 1.2em;\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n    font-weight: 600;\\n    font-size: 1.1em;\\n    margin-bottom: -10px;\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n    color: black;\\n    display: block;\\n    width: 230px;\\n    margin: 0 auto;\\n    margin-top: 15px;\\n    white-space: pre-wrap;\\n    font-size: 1.02em;\\n    background-color: \",\";\\n    border: \",\";\\n    padding: 11px;\\n    transition: all 0.2s;\\n    font-family: 'Roboto';\\n    :hover {\\n        background-color: #5EE6FF;\\n        cursor: \",\";\\n    }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  font-size: 1.04em;\\n  margin-top: 15px;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    display: block;\\n    margin: 0 auto;\\n    margin-bottom: 100px;\\n    font-size: 2em;\\n    background-color: \",\";\\n    border: 1px solid black;\\n    padding: 20px;\\n    transition: all 0.4s;\\n    font-family: 'Roboto';\\n    :hover {\\n        background-color: \",\";\\n        cursor: \",\";\\n    }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import styled from'styled-components';var BeginBtn=styled.button(_templateObject(),function(props){return props.disabled?'#D3D3D3':'#00D8FF';},function(props){return props.disabled?'#D3D3D3':'#5EE6FF';},function(props){return props.disabled?'default':'pointer';});var Note=styled.div(_templateObject2());var DifficultyBtn=styled.button(_templateObject3(),function(props){return props.selected?'#5EE6FF':'#00D8FF';},function(props){return props.selected?'4px solid black':'1.2px solid black';},function(props){return props.selected?'default':'pointer';});var DifficultyText=styled.div(_templateObject4());var Timer=styled.div(_templateObject5());var EmptyTimer=styled.div(_templateObject6());var BeforeQuiz=/*#__PURE__*/function(_React$Component){_inherits(BeforeQuiz,_React$Component);var _super=_createSuper(BeforeQuiz);function BeforeQuiz(props){var _this;_classCallCheck(this,BeforeQuiz);_this=_super.call(this,props);var difficultyOptions=props.difficultyOptions,timeInSeconds=props.timeInSeconds;_this.state={isDifficultySelected:Array(difficultyOptions.length).fill(false),beginDisabled:true,showTimer:false,timeInSeconds:timeInSeconds};return _this;}_createClass(BeforeQuiz,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevState){var setTimer=this.props.setTimer;var timeInSeconds=this.state.timeInSeconds;if(timeInSeconds!==prevState.timeInSeconds){setTimer(this.state.timeInSeconds);}}},{key:\"render\",value:function render(){var _this2=this;var isDifficultySelected=this.state.isDifficultySelected;var _this$state=this.state,beginDisabled=_this$state.beginDisabled,showTimer=_this$state.showTimer,timeInSeconds=_this$state.timeInSeconds;var _this$props=this.props,startTheQuiz=_this$props.startTheQuiz,difficultyOptions=_this$props.difficultyOptions,generateQuestions=_this$props.generateQuestions;var onSelectDifficulty=function onSelectDifficulty(numberOfQuestions,timeInMin,i){isDifficultySelected=Array(difficultyOptions.length).fill(false);isDifficultySelected[i]=!isDifficultySelected[i];_this2.setState({isDifficultySelected:isDifficultySelected,beginDisabled:false,showTimer:true,timeInSeconds:Math.floor(timeInMin*60)});generateQuestions(numberOfQuestions);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Note,null,\"Select Difficulty:\"),/*#__PURE__*/React.createElement(\"div\",null,difficultyOptions.map(function(difficultyOption,i){return/*#__PURE__*/React.createElement(DifficultyBtn,{selected:isDifficultySelected[i],key:i,onClick:function onClick(){return onSelectDifficulty(difficultyOption.numberOfQuestions,difficultyOption.timeInMin,i);}},/*#__PURE__*/React.createElement(DifficultyText,null,difficultyOption.difficulty),\" \",'\\n',\" \",difficultyOption.numberOfQuestions,\" question\",difficultyOption.numberOfQuestions===1?'':'s',\" in \",difficultyOption.timeInMin,\" \",difficultyOption.timeInMin===1?'minute':'minutes');})),showTimer?/*#__PURE__*/React.createElement(Timer,null,Math.floor(timeInSeconds/60)+':'+('0'+Math.floor(timeInSeconds%60)).slice(-2)):/*#__PURE__*/React.createElement(EmptyTimer,null),/*#__PURE__*/React.createElement(BeginBtn,{disabled:beginDisabled,onClick:startTheQuiz},\"Begin Quiz\"));}}]);return BeforeQuiz;}(React.Component);export default BeforeQuiz;","map":{"version":3,"sources":["C:/Users/DS/DSDEVELOPS/react-quiz-app/src/components/beforeQuiz.js"],"names":["React","styled","BeginBtn","button","props","disabled","Note","div","DifficultyBtn","selected","DifficultyText","Timer","EmptyTimer","BeforeQuiz","difficultyOptions","timeInSeconds","state","isDifficultySelected","Array","length","fill","beginDisabled","showTimer","prevState","setTimer","startTheQuiz","generateQuestions","onSelectDifficulty","numberOfQuestions","timeInMin","i","setState","Math","floor","map","difficultyOption","difficulty","slice","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n \r\nconst BeginBtn = styled.button`\r\n    display: block;\r\n    margin: 0 auto;\r\n    margin-bottom: 100px;\r\n    font-size: 2em;\r\n    background-color: ${props => props.disabled ? '#D3D3D3' : '#00D8FF'};\r\n    border: 1px solid black;\r\n    padding: 20px;\r\n    transition: all 0.4s;\r\n    font-family: 'Roboto';\r\n    :hover {\r\n        background-color: ${props => props.disabled ? '#D3D3D3' : '#5EE6FF'};\r\n        cursor: ${props => props.disabled ? 'default' : 'pointer'};\r\n    }\r\n`\r\nconst Note = styled.div`\r\n  font-size: 1.04em;\r\n  margin-top: 15px;\r\n`\r\nconst DifficultyBtn = styled.button`\r\n    color: black;\r\n    display: block;\r\n    width: 230px;\r\n    margin: 0 auto;\r\n    margin-top: 15px;\r\n    white-space: pre-wrap;\r\n    font-size: 1.02em;\r\n    background-color: ${props => props.selected ? '#5EE6FF' : '#00D8FF'};\r\n    border: ${props => props.selected ? '4px solid black' : '1.2px solid black'};\r\n    padding: 11px;\r\n    transition: all 0.2s;\r\n    font-family: 'Roboto';\r\n    :hover {\r\n        background-color: #5EE6FF;\r\n        cursor: ${props => props.selected ? 'default' : 'pointer'};\r\n    }\r\n`\r\nconst DifficultyText = styled.div`\r\n    font-weight: 600;\r\n    font-size: 1.1em;\r\n    margin-bottom: -10px;\r\n`\r\nconst Timer = styled.div`\r\n    margin-top: 60px;\r\n    margin-bottom: 5px;\r\n    font-size: 1.2em;\r\n`\r\nconst EmptyTimer = styled.div`\r\n    margin-top: 60px;\r\n    margin-bottom: 5px;\r\n    font-size: 1.2em;\r\n`\r\n \r\nclass BeforeQuiz extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        const { difficultyOptions, timeInSeconds } = props\r\n        this.state = {\r\n            isDifficultySelected: Array(difficultyOptions.length).fill(false),\r\n            beginDisabled: true,\r\n            showTimer: false,\r\n            timeInSeconds: timeInSeconds\r\n        }\r\n    }\r\n \r\n    componentDidUpdate(prevState) {\r\n        const { setTimer } = this.props\r\n        const { timeInSeconds } = this.state\r\n        if (timeInSeconds !== prevState.timeInSeconds) {\r\n            setTimer(this.state.timeInSeconds)\r\n        }\r\n    }\r\n \r\n    render() {\r\n        let { isDifficultySelected } = this.state\r\n        const { beginDisabled, showTimer, timeInSeconds } = this.state\r\n        const { startTheQuiz, difficultyOptions, generateQuestions } = this.props\r\n \r\n        const onSelectDifficulty = (numberOfQuestions, timeInMin, i) => {\r\n            isDifficultySelected = Array(difficultyOptions.length).fill(false)\r\n            isDifficultySelected[i] = !isDifficultySelected[i]\r\n            this.setState({\r\n                isDifficultySelected: isDifficultySelected,\r\n                beginDisabled: false,\r\n                showTimer: true,\r\n                timeInSeconds: Math.floor(timeInMin * 60)\r\n            })\r\n            generateQuestions(numberOfQuestions)\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                <Note>Select Difficulty:</Note>\r\n                <div>\r\n                    {difficultyOptions.map((difficultyOption, i) => (\r\n                        <DifficultyBtn selected={isDifficultySelected[i]} key={i} onClick={() => onSelectDifficulty(difficultyOption.numberOfQuestions, difficultyOption.timeInMin, i)}>\r\n                            <DifficultyText>{difficultyOption.difficulty}</DifficultyText> {'\\n'} {difficultyOption.numberOfQuestions} question{difficultyOption.numberOfQuestions === 1 ? '' : 's'} in {difficultyOption.timeInMin} {difficultyOption.timeInMin === 1 ? 'minute' : 'minutes'}\r\n                        </DifficultyBtn>\r\n                    ))}\r\n                </div>\r\n                {showTimer ? <Timer>{Math.floor(timeInSeconds / 60) + ':' + ('0' + Math.floor(timeInSeconds % 60)).slice(-2)}</Timer> : <EmptyTimer></EmptyTimer>}\r\n                <BeginBtn disabled={beginDisabled} onClick={startTheQuiz}>Begin Quiz</BeginBtn>\r\n            </div>\r\n          )\r\n        }\r\n    }\r\n \r\nexport default BeforeQuiz"]},"metadata":{},"sourceType":"module"}